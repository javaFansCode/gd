<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.airmcl.air.goods.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.airmcl.air.goods.entity.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="card_number" property="cardNumber" jdbcType="CHAR" />
    <result column="goods_cover" property="goodsCover" jdbcType="VARCHAR" />
    <result column="range" property="range" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="ledger_cycle" property="ledgerCycle" jdbcType="TINYINT" />
    <result column="ledger_rule_id" property="ledgerRuleId" jdbcType="CHAR" />
    <result column="ledger_rule_name" property="ledgerRuleName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="expiry_type" property="expiryType" jdbcType="TINYINT" />
    <result column="expiry" property="expiry" jdbcType="INTEGER" />
    <result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="member_price" property="memberPrice" jdbcType="DECIMAL" />
    <result column="is_purchase" property="isPurchase" jdbcType="TINYINT" />
    <result column="is_coupon" property="isCoupon" jdbcType="TINYINT" />
    <result column="is_refund" property="isRefund" jdbcType="TINYINT" />
    <result column="is_recommend" property="isRecommend" jdbcType="TINYINT" />
    <result column="is_auto_shelve" property="isAutoShelve" jdbcType="TINYINT" />
    <result column="purchase_total" property="purchaseTotal" jdbcType="INTEGER" />
    <result column="comment_total" property="commentTotal" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="openingtime" property="openingtime" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goods_name, card_number, goods_cover, `range`, amount, ledger_cycle, ledger_rule_id, 
    ledger_rule_name, type, expiry_type, expiry, market_price, price, member_price, is_purchase, 
    is_coupon, is_refund, is_recommend, is_auto_shelve, purchase_total, comment_total, 
    sort, openingtime, createtime, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.airmcl.air.goods.entity.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mdd_api_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mdd_api_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mdd_api_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airmcl.air.goods.entity.GoodsExample" >
    delete from mdd_api_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airmcl.air.goods.entity.Goods" useGeneratedKeys="true" keyProperty="id" >
    insert into mdd_api_goods (goods_name, card_number, goods_cover, 
      range, amount, ledger_cycle, 
      ledger_rule_id, ledger_rule_name, type, 
      expiry_type, expiry, market_price, 
      price, member_price, is_purchase, 
      is_coupon, is_refund, is_recommend, 
      is_auto_shelve, purchase_total, comment_total, 
      sort, openingtime, createtime, 
      state)
    values (#{goodsName,jdbcType=VARCHAR}, #{cardNumber,jdbcType=CHAR}, #{goodsCover,jdbcType=VARCHAR}, 
      #{range,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{ledgerCycle,jdbcType=TINYINT}, 
      #{ledgerRuleId,jdbcType=CHAR}, #{ledgerRuleName,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{expiryType,jdbcType=TINYINT}, #{expiry,jdbcType=INTEGER}, #{marketPrice,jdbcType=DECIMAL}, 
      #{price,jdbcType=DECIMAL}, #{memberPrice,jdbcType=DECIMAL}, #{isPurchase,jdbcType=TINYINT}, 
      #{isCoupon,jdbcType=TINYINT}, #{isRefund,jdbcType=TINYINT}, #{isRecommend,jdbcType=TINYINT}, 
      #{isAutoShelve,jdbcType=TINYINT}, #{purchaseTotal,jdbcType=INTEGER}, #{commentTotal,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{openingtime,jdbcType=INTEGER}, #{createtime,jdbcType=INTEGER}, 
      #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.airmcl.air.goods.entity.Goods" useGeneratedKeys="true" keyProperty="id" >
    insert into mdd_api_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="cardNumber != null" >
        card_number,
      </if>
      <if test="goodsCover != null" >
        goods_cover,
      </if>
      <if test="range != null" >
        `range`,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="ledgerCycle != null" >
        ledger_cycle,
      </if>
      <if test="ledgerRuleId != null" >
        ledger_rule_id,
      </if>
      <if test="ledgerRuleName != null" >
        ledger_rule_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="expiryType != null" >
        expiry_type,
      </if>
      <if test="expiry != null" >
        expiry,
      </if>
      <if test="marketPrice != null" >
        market_price,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="memberPrice != null" >
        member_price,
      </if>
      <if test="isPurchase != null" >
        is_purchase,
      </if>
      <if test="isCoupon != null" >
        is_coupon,
      </if>
      <if test="isRefund != null" >
        is_refund,
      </if>
      <if test="isRecommend != null" >
        is_recommend,
      </if>
      <if test="isAutoShelve != null" >
        is_auto_shelve,
      </if>
      <if test="purchaseTotal != null" >
        purchase_total,
      </if>
      <if test="commentTotal != null" >
        comment_total,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="openingtime != null" >
        openingtime,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        #{cardNumber,jdbcType=CHAR},
      </if>
      <if test="goodsCover != null" >
        #{goodsCover,jdbcType=VARCHAR},
      </if>
      <if test="range != null" >
        #{range,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="ledgerCycle != null" >
        #{ledgerCycle,jdbcType=TINYINT},
      </if>
      <if test="ledgerRuleId != null" >
        #{ledgerRuleId,jdbcType=CHAR},
      </if>
      <if test="ledgerRuleName != null" >
        #{ledgerRuleName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="expiryType != null" >
        #{expiryType,jdbcType=TINYINT},
      </if>
      <if test="expiry != null" >
        #{expiry,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null" >
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="memberPrice != null" >
        #{memberPrice,jdbcType=DECIMAL},
      </if>
      <if test="isPurchase != null" >
        #{isPurchase,jdbcType=TINYINT},
      </if>
      <if test="isCoupon != null" >
        #{isCoupon,jdbcType=TINYINT},
      </if>
      <if test="isRefund != null" >
        #{isRefund,jdbcType=TINYINT},
      </if>
      <if test="isRecommend != null" >
        #{isRecommend,jdbcType=TINYINT},
      </if>
      <if test="isAutoShelve != null" >
        #{isAutoShelve,jdbcType=TINYINT},
      </if>
      <if test="purchaseTotal != null" >
        #{purchaseTotal,jdbcType=INTEGER},
      </if>
      <if test="commentTotal != null" >
        #{commentTotal,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="openingtime != null" >
        #{openingtime,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airmcl.air.goods.entity.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from mdd_api_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mdd_api_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNumber != null" >
        card_number = #{record.cardNumber,jdbcType=CHAR},
      </if>
      <if test="record.goodsCover != null" >
        goods_cover = #{record.goodsCover,jdbcType=VARCHAR},
      </if>
      <if test="record.range != null" >
        range = #{record.range,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.ledgerCycle != null" >
        ledger_cycle = #{record.ledgerCycle,jdbcType=TINYINT},
      </if>
      <if test="record.ledgerRuleId != null" >
        ledger_rule_id = #{record.ledgerRuleId,jdbcType=CHAR},
      </if>
      <if test="record.ledgerRuleName != null" >
        ledger_rule_name = #{record.ledgerRuleName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.expiryType != null" >
        expiry_type = #{record.expiryType,jdbcType=TINYINT},
      </if>
      <if test="record.expiry != null" >
        expiry = #{record.expiry,jdbcType=INTEGER},
      </if>
      <if test="record.marketPrice != null" >
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.memberPrice != null" >
        member_price = #{record.memberPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isPurchase != null" >
        is_purchase = #{record.isPurchase,jdbcType=TINYINT},
      </if>
      <if test="record.isCoupon != null" >
        is_coupon = #{record.isCoupon,jdbcType=TINYINT},
      </if>
      <if test="record.isRefund != null" >
        is_refund = #{record.isRefund,jdbcType=TINYINT},
      </if>
      <if test="record.isRecommend != null" >
        is_recommend = #{record.isRecommend,jdbcType=TINYINT},
      </if>
      <if test="record.isAutoShelve != null" >
        is_auto_shelve = #{record.isAutoShelve,jdbcType=TINYINT},
      </if>
      <if test="record.purchaseTotal != null" >
        purchase_total = #{record.purchaseTotal,jdbcType=INTEGER},
      </if>
      <if test="record.commentTotal != null" >
        comment_total = #{record.commentTotal,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.openingtime != null" >
        openingtime = #{record.openingtime,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mdd_api_goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      card_number = #{record.cardNumber,jdbcType=CHAR},
      goods_cover = #{record.goodsCover,jdbcType=VARCHAR},
      range = #{record.range,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      ledger_cycle = #{record.ledgerCycle,jdbcType=TINYINT},
      ledger_rule_id = #{record.ledgerRuleId,jdbcType=CHAR},
      ledger_rule_name = #{record.ledgerRuleName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      expiry_type = #{record.expiryType,jdbcType=TINYINT},
      expiry = #{record.expiry,jdbcType=INTEGER},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      member_price = #{record.memberPrice,jdbcType=DECIMAL},
      is_purchase = #{record.isPurchase,jdbcType=TINYINT},
      is_coupon = #{record.isCoupon,jdbcType=TINYINT},
      is_refund = #{record.isRefund,jdbcType=TINYINT},
      is_recommend = #{record.isRecommend,jdbcType=TINYINT},
      is_auto_shelve = #{record.isAutoShelve,jdbcType=TINYINT},
      purchase_total = #{record.purchaseTotal,jdbcType=INTEGER},
      comment_total = #{record.commentTotal,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      openingtime = #{record.openingtime,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=INTEGER},
      state = #{record.state,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airmcl.air.goods.entity.Goods" >
    update mdd_api_goods
    <set >
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        card_number = #{cardNumber,jdbcType=CHAR},
      </if>
      <if test="goodsCover != null" >
        goods_cover = #{goodsCover,jdbcType=VARCHAR},
      </if>
      <if test="range != null" >
        `range` = #{range,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="ledgerCycle != null" >
        ledger_cycle = #{ledgerCycle,jdbcType=TINYINT},
      </if>
      <if test="ledgerRuleId != null" >
        ledger_rule_id = #{ledgerRuleId,jdbcType=CHAR},
      </if>
      <if test="ledgerRuleName != null" >
        ledger_rule_name = #{ledgerRuleName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="expiryType != null" >
        expiry_type = #{expiryType,jdbcType=TINYINT},
      </if>
      <if test="expiry != null" >
        expiry = #{expiry,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null" >
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="memberPrice != null" >
        member_price = #{memberPrice,jdbcType=DECIMAL},
      </if>
      <if test="isPurchase != null" >
        is_purchase = #{isPurchase,jdbcType=TINYINT},
      </if>
      <if test="isCoupon != null" >
        is_coupon = #{isCoupon,jdbcType=TINYINT},
      </if>
      <if test="isRefund != null" >
        is_refund = #{isRefund,jdbcType=TINYINT},
      </if>
      <if test="isRecommend != null" >
        is_recommend = #{isRecommend,jdbcType=TINYINT},
      </if>
      <if test="isAutoShelve != null" >
        is_auto_shelve = #{isAutoShelve,jdbcType=TINYINT},
      </if>
      <if test="purchaseTotal != null" >
        purchase_total = #{purchaseTotal,jdbcType=INTEGER},
      </if>
      <if test="commentTotal != null" >
        comment_total = #{commentTotal,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="openingtime != null" >
        openingtime = #{openingtime,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airmcl.air.goods.entity.Goods" >
    update mdd_api_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=CHAR},
      goods_cover = #{goodsCover,jdbcType=VARCHAR},
      range = #{range,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      ledger_cycle = #{ledgerCycle,jdbcType=TINYINT},
      ledger_rule_id = #{ledgerRuleId,jdbcType=CHAR},
      ledger_rule_name = #{ledgerRuleName,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      expiry_type = #{expiryType,jdbcType=TINYINT},
      expiry = #{expiry,jdbcType=INTEGER},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      member_price = #{memberPrice,jdbcType=DECIMAL},
      is_purchase = #{isPurchase,jdbcType=TINYINT},
      is_coupon = #{isCoupon,jdbcType=TINYINT},
      is_refund = #{isRefund,jdbcType=TINYINT},
      is_recommend = #{isRecommend,jdbcType=TINYINT},
      is_auto_shelve = #{isAutoShelve,jdbcType=TINYINT},
      purchase_total = #{purchaseTotal,jdbcType=INTEGER},
      comment_total = #{commentTotal,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      openingtime = #{openingtime,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" parameterType="com.airmcl.air.goods.entity.Goods" >
    insert into mdd_api_goods (id, goods_name, card_number, 
      goods_cover, range, amount, 
      ledger_cycle, ledger_rule_id, ledger_rule_name, 
      type, expiry_type, expiry, 
      market_price, price, member_price, 
      is_purchase, is_coupon, is_refund, 
      is_recommend, is_auto_shelve, purchase_total, 
      comment_total, sort, openingtime, 
      createtime, state) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{_uuid}, #{item.goodsName,jdbcType=VARCHAR}, #{item.cardNumber,jdbcType=CHAR}, 
        #{item.goodsCover,jdbcType=VARCHAR}, #{item.range,jdbcType=VARCHAR}, #{item.amount,jdbcType=DECIMAL}, 
        #{item.ledgerCycle,jdbcType=TINYINT}, #{item.ledgerRuleId,jdbcType=CHAR}, #{item.ledgerRuleName,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=TINYINT}, #{item.expiryType,jdbcType=TINYINT}, #{item.expiry,jdbcType=INTEGER}, 
        #{item.marketPrice,jdbcType=DECIMAL}, #{item.price,jdbcType=DECIMAL}, #{item.memberPrice,jdbcType=DECIMAL}, 
        #{item.isPurchase,jdbcType=TINYINT}, #{item.isCoupon,jdbcType=TINYINT}, #{item.isRefund,jdbcType=TINYINT}, 
        #{item.isRecommend,jdbcType=TINYINT}, #{item.isAutoShelve,jdbcType=TINYINT}, #{item.purchaseTotal,jdbcType=INTEGER}, 
        #{item.commentTotal,jdbcType=INTEGER}, #{item.sort,jdbcType=INTEGER}, #{item.openingtime,jdbcType=INTEGER}, 
        #{item.createtime,jdbcType=INTEGER}, #{item.state,jdbcType=TINYINT})
    </foreach>
  </insert>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.airmcl.air.goods.entity.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mdd_api_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>
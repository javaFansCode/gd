<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.airmcl.air.area.dao.AreasMapper" >
  <resultMap id="BaseResultMap" type="com.airmcl.air.area.entity.Areas" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="parent_id" property="parent_id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="is_open" property="is_open" jdbcType="TINYINT" />
    <result column="is_outside" property="is_outside" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, `name`, parent_id, `level`, is_open, is_outside
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.airmcl.air.area.entity.AreasExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mdd_api_areas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mdd_api_areas
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mdd_api_areas
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airmcl.air.area.entity.AreasExample" >
    delete from mdd_api_areas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airmcl.air.area.entity.Areas" useGeneratedKeys="true" keyProperty="id" >
    insert into mdd_api_areas (`name`, parent_id, `level`, 
      is_open, is_outside)
    values (#{name,jdbcType=CHAR}, #{parent_id,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, 
      #{is_open,jdbcType=TINYINT}, #{is_outside,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.airmcl.air.area.entity.Areas" useGeneratedKeys="true" keyProperty="id" >
    insert into mdd_api_areas
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        `name`,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
      <if test="level != null" >
        `level`,
      </if>
      <if test="is_open != null" >
        is_open,
      </if>
      <if test="is_outside != null" >
        is_outside,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="is_open != null" >
        #{is_open,jdbcType=TINYINT},
      </if>
      <if test="is_outside != null" >
        #{is_outside,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airmcl.air.area.entity.AreasExample" resultType="java.lang.Integer" >
    select count(*) from mdd_api_areas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mdd_api_areas
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.parent_id != null" >
        parent_id = #{record.parent_id,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        `level` = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.is_open != null" >
        is_open = #{record.is_open,jdbcType=TINYINT},
      </if>
      <if test="record.is_outside != null" >
        is_outside = #{record.is_outside,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mdd_api_areas
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=CHAR},
      parent_id = #{record.parent_id,jdbcType=INTEGER},
      `level` = #{record.level,jdbcType=TINYINT},
      is_open = #{record.is_open,jdbcType=TINYINT},
      is_outside = #{record.is_outside,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airmcl.air.area.entity.Areas" >
    update mdd_api_areas
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=CHAR},
      </if>
      <if test="parent_id != null" >
        parent_id = #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=TINYINT},
      </if>
      <if test="is_open != null" >
        is_open = #{is_open,jdbcType=TINYINT},
      </if>
      <if test="is_outside != null" >
        is_outside = #{is_outside,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airmcl.air.area.entity.Areas" >
    update mdd_api_areas
    set `name` = #{name,jdbcType=CHAR},
      parent_id = #{parent_id,jdbcType=INTEGER},
      `level` = #{level,jdbcType=TINYINT},
      is_open = #{is_open,jdbcType=TINYINT},
      is_outside = #{is_outside,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" parameterType="com.airmcl.air.area.entity.Areas" >
    insert into mdd_api_areas (id, `name`, parent_id, `level`, 
      is_open, is_outside) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{_uuid}, #{item.name,jdbcType=CHAR}, #{item.parent_id,jdbcType=INTEGER}, #{item.level,jdbcType=TINYINT}, 
        #{item.is_open,jdbcType=TINYINT}, #{item.is_outside,jdbcType=TINYINT})
    </foreach>
  </insert>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.airmcl.air.area.entity.AreasExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mdd_api_areas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>
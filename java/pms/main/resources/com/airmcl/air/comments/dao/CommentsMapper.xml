<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.airmcl.air.comments.dao.CommentsMapper" >
  <resultMap id="BaseResultMap" type="com.airmcl.air.comments.entity.Comments" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="service_id" property="serviceId" jdbcType="VARCHAR" />
    <result column="beauty_id" property="beautyId" jdbcType="INTEGER" />
    <result column="bt_id" property="btId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="to_user" property="toUser" jdbcType="INTEGER" />
    <result column="professional" property="professional" jdbcType="TINYINT" />
    <result column="punctuality" property="punctuality" jdbcType="TINYINT" />
    <result column="communication" property="communication" jdbcType="TINYINT" />
    <result column="satisfy" property="satisfy" jdbcType="DOUBLE" />
    <result column="order_type" property="orderType" jdbcType="TINYINT" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="is_reply" property="isReply" jdbcType="TINYINT" />
    <result column="is_read" property="isRead" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="createtime" property="createtime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.airmcl.air.comments.entity.Comments" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, order_id, service_id, beauty_id, bt_id, user_id, nickname, to_user, 
    professional, punctuality, communication, satisfy, order_type, service_name, state, 
    is_reply, is_read, type, createtime
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.airmcl.air.comments.entity.CommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mdd_api_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.airmcl.air.comments.entity.CommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mdd_api_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mdd_api_comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mdd_api_comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airmcl.air.comments.entity.CommentsExample" >
    delete from mdd_api_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airmcl.air.comments.entity.Comments" useGeneratedKeys="true" keyProperty="id" >
    insert into mdd_api_comments (parent_id, order_id, service_id, 
      beauty_id, bt_id, user_id, 
      nickname, to_user, professional, 
      punctuality, communication, satisfy, 
      order_type, service_name, state, 
      is_reply, is_read, type, 
      createtime, content)
    values (#{parentId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{serviceId,jdbcType=VARCHAR}, 
      #{beautyId,jdbcType=INTEGER}, #{btId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{toUser,jdbcType=INTEGER}, #{professional,jdbcType=TINYINT}, 
      #{punctuality,jdbcType=TINYINT}, #{communication,jdbcType=TINYINT}, #{satisfy,jdbcType=DOUBLE}, 
      #{orderType,jdbcType=TINYINT}, #{serviceName,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{isReply,jdbcType=TINYINT}, #{isRead,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{createtime,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.airmcl.air.comments.entity.Comments" useGeneratedKeys="true" keyProperty="id" >
    insert into mdd_api_comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="beautyId != null" >
        beauty_id,
      </if>
      <if test="btId != null" >
        bt_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="toUser != null" >
        to_user,
      </if>
      <if test="professional != null" >
        professional,
      </if>
      <if test="punctuality != null" >
        punctuality,
      </if>
      <if test="communication != null" >
        communication,
      </if>
      <if test="satisfy != null" >
        satisfy,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="serviceName != null" >
        service_name,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isReply != null" >
        is_reply,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="beautyId != null" >
        #{beautyId,jdbcType=INTEGER},
      </if>
      <if test="btId != null" >
        #{btId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null" >
        #{toUser,jdbcType=INTEGER},
      </if>
      <if test="professional != null" >
        #{professional,jdbcType=TINYINT},
      </if>
      <if test="punctuality != null" >
        #{punctuality,jdbcType=TINYINT},
      </if>
      <if test="communication != null" >
        #{communication,jdbcType=TINYINT},
      </if>
      <if test="satisfy != null" >
        #{satisfy,jdbcType=DOUBLE},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="serviceName != null" >
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="isReply != null" >
        #{isReply,jdbcType=TINYINT},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airmcl.air.comments.entity.CommentsExample" resultType="java.lang.Integer" >
    select count(*) from mdd_api_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mdd_api_comments
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceId != null" >
        service_id = #{record.serviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.beautyId != null" >
        beauty_id = #{record.beautyId,jdbcType=INTEGER},
      </if>
      <if test="record.btId != null" >
        bt_id = #{record.btId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.toUser != null" >
        to_user = #{record.toUser,jdbcType=INTEGER},
      </if>
      <if test="record.professional != null" >
        professional = #{record.professional,jdbcType=TINYINT},
      </if>
      <if test="record.punctuality != null" >
        punctuality = #{record.punctuality,jdbcType=TINYINT},
      </if>
      <if test="record.communication != null" >
        communication = #{record.communication,jdbcType=TINYINT},
      </if>
      <if test="record.satisfy != null" >
        satisfy = #{record.satisfy,jdbcType=DOUBLE},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=TINYINT},
      </if>
      <if test="record.serviceName != null" >
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.isReply != null" >
        is_reply = #{record.isReply,jdbcType=TINYINT},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update mdd_api_comments
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      service_id = #{record.serviceId,jdbcType=VARCHAR},
      beauty_id = #{record.beautyId,jdbcType=INTEGER},
      bt_id = #{record.btId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      to_user = #{record.toUser,jdbcType=INTEGER},
      professional = #{record.professional,jdbcType=TINYINT},
      punctuality = #{record.punctuality,jdbcType=TINYINT},
      communication = #{record.communication,jdbcType=TINYINT},
      satisfy = #{record.satisfy,jdbcType=DOUBLE},
      order_type = #{record.orderType,jdbcType=TINYINT},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      is_reply = #{record.isReply,jdbcType=TINYINT},
      is_read = #{record.isRead,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      createtime = #{record.createtime,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mdd_api_comments
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      service_id = #{record.serviceId,jdbcType=VARCHAR},
      beauty_id = #{record.beautyId,jdbcType=INTEGER},
      bt_id = #{record.btId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      to_user = #{record.toUser,jdbcType=INTEGER},
      professional = #{record.professional,jdbcType=TINYINT},
      punctuality = #{record.punctuality,jdbcType=TINYINT},
      communication = #{record.communication,jdbcType=TINYINT},
      satisfy = #{record.satisfy,jdbcType=DOUBLE},
      order_type = #{record.orderType,jdbcType=TINYINT},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      is_reply = #{record.isReply,jdbcType=TINYINT},
      is_read = #{record.isRead,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      createtime = #{record.createtime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airmcl.air.comments.entity.Comments" >
    update mdd_api_comments
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="beautyId != null" >
        beauty_id = #{beautyId,jdbcType=INTEGER},
      </if>
      <if test="btId != null" >
        bt_id = #{btId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null" >
        to_user = #{toUser,jdbcType=INTEGER},
      </if>
      <if test="professional != null" >
        professional = #{professional,jdbcType=TINYINT},
      </if>
      <if test="punctuality != null" >
        punctuality = #{punctuality,jdbcType=TINYINT},
      </if>
      <if test="communication != null" >
        communication = #{communication,jdbcType=TINYINT},
      </if>
      <if test="satisfy != null" >
        satisfy = #{satisfy,jdbcType=DOUBLE},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="serviceName != null" >
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="isReply != null" >
        is_reply = #{isReply,jdbcType=TINYINT},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.airmcl.air.comments.entity.Comments" >
    update mdd_api_comments
    set parent_id = #{parentId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=VARCHAR},
      beauty_id = #{beautyId,jdbcType=INTEGER},
      bt_id = #{btId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=INTEGER},
      professional = #{professional,jdbcType=TINYINT},
      punctuality = #{punctuality,jdbcType=TINYINT},
      communication = #{communication,jdbcType=TINYINT},
      satisfy = #{satisfy,jdbcType=DOUBLE},
      order_type = #{orderType,jdbcType=TINYINT},
      service_name = #{serviceName,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      is_reply = #{isReply,jdbcType=TINYINT},
      is_read = #{isRead,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airmcl.air.comments.entity.Comments" >
    update mdd_api_comments
    set parent_id = #{parentId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=VARCHAR},
      beauty_id = #{beautyId,jdbcType=INTEGER},
      bt_id = #{btId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=INTEGER},
      professional = #{professional,jdbcType=TINYINT},
      punctuality = #{punctuality,jdbcType=TINYINT},
      communication = #{communication,jdbcType=TINYINT},
      satisfy = #{satisfy,jdbcType=DOUBLE},
      order_type = #{orderType,jdbcType=TINYINT},
      service_name = #{serviceName,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      is_reply = #{isReply,jdbcType=TINYINT},
      is_read = #{isRead,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" parameterType="com.airmcl.air.comments.entity.Comments" >
    insert into mdd_api_comments (id, parent_id, order_id, service_id, 
      beauty_id, bt_id, user_id, 
      nickname, to_user, professional, 
      punctuality, communication, satisfy, 
      order_type, service_name, state, 
      is_reply, is_read, type, 
      createtime, content) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{_uuid}, #{item.parentId,jdbcType=INTEGER}, #{item.orderId,jdbcType=INTEGER}, #{item.serviceId,jdbcType=VARCHAR}, 
        #{item.beautyId,jdbcType=INTEGER}, #{item.btId,jdbcType=INTEGER}, #{item.userId,jdbcType=VARCHAR}, 
        #{item.nickname,jdbcType=VARCHAR}, #{item.toUser,jdbcType=INTEGER}, #{item.professional,jdbcType=TINYINT}, 
        #{item.punctuality,jdbcType=TINYINT}, #{item.communication,jdbcType=TINYINT}, #{item.satisfy,jdbcType=DOUBLE}, 
        #{item.orderType,jdbcType=TINYINT}, #{item.serviceName,jdbcType=VARCHAR}, #{item.state,jdbcType=TINYINT}, 
        #{item.isReply,jdbcType=TINYINT}, #{item.isRead,jdbcType=TINYINT}, #{item.type,jdbcType=TINYINT}, 
        #{item.createtime,jdbcType=INTEGER}, #{item.content,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.airmcl.air.comments.entity.CommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mdd_api_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>


  <update id="updateState" >
    UPDATE mdd_api_comments SET state=#{state}
    WHERE  id in
    <foreach item="item" index="index" collection="ids"
             open="(" separator="," close=")">
    #{item}
    </foreach>
  </update>


</mapper>